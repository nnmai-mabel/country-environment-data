@model Assig1.ViewModels.CountriesViewModel

@{
    ViewData["Title"] = "Index";
}

@*Alert for showing region*@
@if (Model.CountryList.Count() > 0)
{
    <div class="row justify-content-center" align="center" role="alert">
        @if (Model.RegionId != null)
        {
            <div class="alert alert-success" role="alert">
                There @(Model.CountryList.Count() == 1 ? "is" : "are") @Model.CountryList.Count()
                @(Model.CountryList.Count() == 1 ? "country that matches" : "countries that match")  your search in @Model.CountryList[0].TheRegion.RegionName region.
            </div>
        }
    </div>
}

<div class="row justify-content-center" align="center" role="alert">
    <h1 class="p-2 text-center mb-3" role="alert" id="headingAlert">Countries</h1>
</div>

@*Buttons and form elements*@
<div class="mb-5 mt-3">
    <form method="post" asp-controller="Countries" asp-action="Index" asp-route-regionId="@Model.RegionId" class="row mb-2">
        <div class="col-2">
            <a asp-controller="Regions" asp-action="Index" class="btn btn-success">Visit All Regions</a>
        </div>
        <div class="col-4">
            <input type="text" list="countryList" class="form-control" maxlength="100" id="countryName" asp-for="@Model.SearchText" placeholder="Search countries" title="Search a country name" />
            <datalist id="countryList">
                @foreach (var city in Model.CountryList)
                {
                    <option value="@city.TheCountry?.CountryName"></option>
                }
            </datalist>
        </div>

        <div class="col-3">
            <select asp-for="@Model.RegionId" asp-items="@Model.RegionSelectList" class="form-control" title="View countries for a specific region">
                <option value="">All Regions</option>
            </select>
        </div>

        <div class="col-2">
            <button type="submit" class="btn btn-info">Search</button>
        </div>
    </form>
</div>

@*Show countries with regions*@
<div class="row justify-content-center">
    @foreach (var item in Model.CountryList)
    {
        <div class="col-3 m-3">
            <div class="card" style="width: 20rem;">
                <img src="@item.TheCountry.ImageUrl" class="card-img-top" style="height: 12rem;" alt="@item.TheCountry.CountryName" />
                <div class="card-body justify-content-around text-center">
                    <h5 class="card-title justify-content-center mb-3 ">@item.TheCountry.CountryName</h5>
                    @if (item.TheCountry.Region != null)
                    {
                        <p>Region: @item.TheCountry.Region.RegionName</p>
                    }
                    else
                    {
                        <p>Region: Not available</p>
                    }

                    <div class="d-flex justify-content-around">
                        @*Add a route pageSource parameter to know which page to go back*@
                        <a asp-controller="Cities" asp-action="Index" asp-route-regionId="@Model.RegionId" asp-route-countryId="@item.TheCountry.CountryId" asp-route-pageSource="countriesIndex" asp-route-searchText="@Model.SearchText" class="btn btn-warning">Visit Cities</a>
                        <a asp-action="Details" asp-route-countryId="@item.TheCountry.CountryId" asp-route-regionId="@Model.RegionId" class="btn btn-primary">View Data</a>
                    </div>

                </div>
            </div>
        </div>
    }
</div>
