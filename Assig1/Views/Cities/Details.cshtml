@*@model Assig1.Models.City*@
@model Assig1.ViewModels.CitiesViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>
<a asp-action="Index" asp-route-id="@Model.RegionId" asp-route-countryId="@Model.TheCityDetail.TheCity.CountryId" asp-route-searchText="@Model.SearchText" class="btn btn-outline-primary">Go back</a>
<div>
    @if (Model.TheCityDetail != null)
    {
        <p>City name: @Model.TheCityDetail.TheCity.CityName</p>
    }
    else
    {
        <p>No name</p>
    }

    @if (Model.TheCityDetail != null)
    {
        <p>Region Name: @Model.TheCityDetail.TheRegion.RegionName</p>
    }
    else
    {
        <p>No region</p>
    }
    @if (Model.TheCityDetail != null)
    {
        <p>Country Name: @Model.TheCityDetail.TheCountry.CountryName</p>
        <p>Image: </p>
        @*<img src="@Model.TheCityDetail.TheCountry.ImageUrl" class="card-img-top" alt="...">*@
    }
    else
    {
        <p>No country</p>
    }
    @*@if(Model.TheCityDetail != null)
        {
                    <p>Country Name: @Model.TheCityDetail.TheCountry.CountryName</p>
        }*@


</div>

<div>
    <svg width="100%" height="600px" class="border border-primary rounded p-2"></svg>
</div>

<div>
    <table>
        <thead>
            <tr>
                <th>cityId</th>
                <th>year</th>
                <th>annualMean</th>
                <th>annualMeanPm10</th>
                <th>annualMeanPm25</th>
                <th>annualMeanUgm3</th>
                <th>temporalCoverage1</th>
                <th>temporalCoverage2</th>
                <th>reference</th>
                <th>dbYear</th>
                <th>status</th>
                <th>stationType</th>
                <th>number</th>
            </tr>
        </thead>
        <tbody class="AirQualityInfo">
            <tr class="rowData">
                <td>cityId test</td>
                <td>year test</td>
                <td>annualMean test</td>
                <td>annualMeanPm10 test</td>
                <td>annualMeanPm25 test</td>
                <td>annualMeanUgm3 test</td>
                <td>temporalCoverage1 test</td>
                <td>temporalCoverage2 test</td>
                <td>reference test</td>
                <td>dbYear test</td>
                <td>status test</td>
                <td>stationType test</td>
                <td>number test</td>
            </tr>
        </tbody>
    </table>
</div>
@section scripts{
    <script type="module">
        import * as d3 from "https://cdn.jsdelivr.net/npm/d3@7/+esm";

        fetch(`/Cities/AirQualityReportData?cityId=${@Model.CityId}`)
            .then(response => {
                console.log("response status: " + response.status);
                console.log("response text: " + response.statusText);
                return response.json();
            })
            .then(data => buildAirQualityTable(data))
            .catch(err => console.log(err.message));

        function buildAirQualityTable(dataSet) {
            console.log("This is air quality table")
            console.log(dataSet)

            var table = document.querySelector(".AirQualityInfo")

            for (let i = 0; i < dataSet.length; i++) {
                var row = table.querySelector("tr.rowData").cloneNode(true);

                let tdList = row.querySelectorAll('td');
                tdList[0].innerText = dataSet[i].cityId;
                tdList[1].innerText = dataSet[i].year;
                tdList[2].innerText = dataSet[i].annualMean;
                tdList[3].innerText = dataSet[i].annualMeanPm10;
                tdList[4].innerText = dataSet[i].annualMeanPm25;
                tdList[5].innerText = dataSet[i].annualMeanUgm3;
                tdList[6].innerText = dataSet[i].temporalCoverage1;
                tdList[7].innerText = dataSet[i].temporalCoverage2;
                tdList[8].innerText = dataSet[i].reference;
                tdList[9].innerText = dataSet[i].dbYear;
                tdList[10].innerText = dataSet[i].status;
                tdList[11].innerText = dataSet[i].stationType;
                tdList[12].innerText = dataSet[i].number;

                table.appendChild(row);

                if (i == (dataSet.length - 1)) {
                    table.removeChild(table.querySelector("tr.rowData"))
                }
            }
        }
    </script>
}
@*<div>
        <h4>City</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CityName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CityName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Country)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Country.CountryId)
            </dd>
        </dl>
    </div>
    <div>
        <a asp-action="Edit" asp-route-id="@Model?.CityId">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>*@
