@*@model Assig1.Models.Country*@
@*@model Assig1.ViewModels.Country_CountryDetail*@
@model Assig1.ViewModels.CountriesViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div class="row mb-3">
    <div class="col-2">
        <select asp-for="@Model.Year" asp-items="@Model.YearList" class="form-control" id="year">
            <option value="">Select year</option>
        </select>
    </div>

    <div class="col-2">
        <select asp-for="@Model.ChartLegend" class="form-control" id="chartLegend">
            <option value="">Select Data</option>
            <option value="Items">Items</option>
            <option value="Elements">Elements</option>
        </select>
    </div>

    <div class="col-2">
        <select asp-for="@Model.ChartAggregation" class="form-control" id="chartAggregation">
            <option value="">Select Aggregation</option>
            <option value="Total">Total</option>
            <option value="Average">Average</option>
        </select>
    </div>

</div>

<div>
    <svg width="100%" height="600px" class="border border-primary rounded p-2"></svg>
</div>

<div class="row justify-content-end">
    <div class="col-4">
        <img src="@Model.TheCountryDetail.TheCountry.ImageUrl" class="card-img-top" alt="...">
        <p>Country: @Model.TheCountryDetail.TheCountry.CountryName</p>
        @if (Model.TheCountryDetail.TheRegion != null)
        {
            <p>Region: @Model.TheCountryDetail.TheRegion.RegionName</p>
            <a asp-action="Index" asp-route-countryId="@Model.TheCountryDetail.TheCountry.CountryId" asp-route-regionId="@Model.TheCountryDetail.TheRegion.RegionId" class="btn btn-outline-info">Countries List in same region</a>
        }
        else
        {
            <p>Region: no regions</p>
            <a asp-action="Index" asp-route-countryId="" class="btn btn-outline-info">All Countries List</a>
        }
        <a asp-controller="Cities" asp-action="Index" asp-route-countryId="@Model.TheCountryDetail.TheCountry.CountryId" class="btn btn-outline-success">Visit cities</a>

        @*<img src="@Model.TheCountryDetail.TheCountry.ImageUrl" class="card-img-top" alt="...">*@
        @*<img src="@Model.ImageUrl" class="card-img-top" alt="...">*@
    </div>
    <div class="col-1">

    </div>
    <div class="col-7">
        <div class="row justify-content-end">
            <div class="col-4">
                @*<img src="@Model.TheCountry.ImageUrl" class="card-img-top" alt="...">*@
                @*<img src="@Model.ImageUrl" class="card-img-top" alt="...">*@
            </div>
            <div class="col-1">

            </div>
            <div class="col-7">
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="module">
    import * as d3 from "https://cdn.jsdelivr.net/npm/d3@7/+esm";

    // Select SVG element
    const svg = d3.select('svg');

    // Determine the size of the SVG element
    let w = svg.node().getBoundingClientRect().width;
    let h = svg.node().getBoundingClientRect().height;

    console.log("Width: " + w);
    console.log("Height: " + h);

        // DDL year event listener
        document.querySelector('.row .col-2 #year').addEventListener('change', (event) => {
        let year = event.target.value;
        console.log("Year: " + year);

            document.querySelector('.row .col-2 #chartLegend').addEventListener('change', legendEvent => {
                let chartLegend = legendEvent.target.value;
                console.log("Chart Legend: " + chartLegend);

                document.querySelector('.row .col-2 #chartAggregation').addEventListener('change', aggregationEvent => {
                    let chartAggregation = aggregationEvent.target.value;
                    console.log("Chart Aggregation: " + chartAggregation);

                    var url = `/Countries/CountryEmissionsReportData?countryId=${@Model.CountryId}&year=${year}&chartLegend=${chartLegend}&chartAggregation=${chartAggregation}`;

                    if (year.length > 0) {
                        fetch(url)
                            .then(response => {
                                console.log("response status: " + response.status);
                                console.log("response text: " + response.statusText);
                                return response.json();
                            })
                        .then(data => buildGraph(data))
                        .catch(err => console.log(err.message));
                    }
                })

            })

    })

    // Alternate using D3
    //d3.select('.row .col-2 [name="year"]').on('change', (event) => {
        // fetch using event.target.value
    //})

    function buildGraph(dataSet) {
        console.log(dataSet);
    }
    </script>
}
<div>
    @*<h4>Country</h4>
        <hr />
        <dl class="row">
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Iso3)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Iso3)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.CountryName)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.CountryName)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.ImageUrl)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.ImageUrl)
            </dd>
            <dt class = "col-sm-2">
                @Html.DisplayNameFor(model => model.Region)
            </dt>
            <dd class = "col-sm-10">
                @Html.DisplayFor(model => model.Region.RegionId)
            </dd>
        </dl>*@
</div>
<div>
    @*<a asp-action="Edit" asp-route-id="@Model?@Model.TheCountry.CountryId">Edit</a> |*@
    @*<a asp-action="Index">Back to List</a>*@
</div>
